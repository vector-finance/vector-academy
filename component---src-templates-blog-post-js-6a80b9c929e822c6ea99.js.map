{"version":3,"sources":["webpack://vector-academy/./src/templates/blog-post.js"],"names":["Post","styled","PostNav","Hr","props","theme","palette","gray300","data","location","post","markdownRemark","siteTitle","site","siteMetadata","title","previous","next","itemScope","itemType","itemProp","frontmatter","date","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel"],"mappings":"4LAQMA,EAAOC,6BAAH,0DAAGA,CAAH,2CAUJC,EAAUD,yBAAH,6DAAGA,CAAH,mBAMPE,EAAKF,wBAAH,wDAAGA,CAAH,6BACgB,SAACG,GAAD,OAAWA,EAAMC,MAAMC,QAAQC,WAmDvD,UAhDyB,SAAC,GAAwB,IAAD,EAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAC1BC,EAAOF,EAAKG,eACZC,GAAY,UAAAJ,EAAKK,KAAKC,oBAAV,eAAwBC,QAAxB,QACVC,EAAmBR,EAAnBQ,SAAUC,EAAST,EAATS,KAElB,OACE,gBAAC,IAAD,CAAQR,SAAUA,EAAUM,MAAOH,GACjC,gBAACZ,EAAD,CAAMkB,WAAS,EAACC,SAAS,6BACvB,8BACE,sBAAIC,SAAS,YAAYV,EAAKW,YAAYN,OAC1C,gBAAC,IAAD,KAAUL,EAAKW,YAAYC,OAE7B,gBAACnB,EAAD,MACA,gBAAC,IAAD,CACEoB,wBAAyB,CAAEC,OAAQd,EAAKe,MACxCL,SAAS,iBAGb,gBAAClB,EAAD,KACE,sBACEwB,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,0BACGf,GACC,gBAAC,EAAAgB,KAAD,CAAMC,GAAIjB,EAASkB,OAAOC,KAAMC,IAAI,QAApC,KACKpB,EAASK,YAAYN,QAI9B,0BACGE,GACC,gBAAC,EAAAe,KAAD,CAAMC,GAAIhB,EAAKiB,OAAOC,KAAMC,IAAI,QAC7BnB,EAAKI,YAAYN,MADpB","file":"component---src-templates-blog-post-js-6a80b9c929e822c6ea99.js","sourcesContent":["import * as React from \"react\";\nimport { Link, graphql } from \"gatsby\";\nimport styled from \"styled-components\";\n\nimport Layout from \"../components/layout\";\nimport Body1 from \"../components/body1\";\nimport Caption from \"../components/caption\";\n\nconst Post = styled.article`\n  p {\n    font-size: 16px;\n  }\n  ul,\n  ol {\n    margin: 16px;\n  }\n`;\n\nconst PostNav = styled.nav`\n  ul {\n    margin: 0;\n  }\n`;\n\nconst Hr = styled.hr`\n  border: 0.5px solid ${(props) => props.theme.palette.gray300};\n`;\n\nconst BlogPostTemplate = ({ data, location }) => {\n  const post = data.markdownRemark;\n  const siteTitle = data.site.siteMetadata?.title || `Title`;\n  const { previous, next } = data;\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Post itemScope itemType=\"http://schema.org/Article\">\n        <header>\n          <h2 itemProp=\"headline\">{post.frontmatter.title}</h2>\n          <Caption>{post.frontmatter.date}</Caption>\n        </header>\n        <Hr />\n        <Body1\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n      </Post>\n      <PostNav>\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </PostNav>\n    </Layout>\n  );\n};\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}