{"version":3,"sources":["webpack://vector-academy/./src/components/banner.tsx","webpack://vector-academy/./src/pages/index.tsx"],"names":["Container","styled","props","theme","palette","primary","secondary","Content","gray300","Header","Subtitle","PostList","PostItem","global","surface","data","posts","location","site","siteMetadata","title","allMarkdownRemark","nodes","length","map","post","frontmatter","fields","slug","key","itemScope","itemType","Link","to","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt"],"mappings":"6MAIMA,EAAYC,yBAAH,4DAAGA,CAAH,0HAKT,SAACC,GAAD,OAAWA,EAAMC,MAAMC,QAAQC,WAC/B,SAACH,GAAD,OAAWA,EAAMC,MAAMC,QAAQE,aAM/BC,EAAUN,yBAAH,0DAAGA,CAAH,2DAIF,SAACC,GAAD,OAAWA,EAAMC,MAAMC,QAAQI,WAGpCC,EAASR,yBAAH,yDAAGA,CAAH,8CAMNS,EAAWT,yBAAH,2DAAGA,CAAH,uDAiBd,EAXyB,kBACvB,gBAACD,EAAD,KACE,gBAACO,EAAD,KACE,gBAACE,EAAD,kCACA,gBAACC,EAAD,uE,8BC7BAC,EAAWV,wBAAH,0DAAGA,CAAH,oEAORW,EAAWX,6BAAH,0DAAGA,CAAH,oHAIE,SAACC,GAAD,OAAWA,EAAMC,MAAMU,OAAOC,WA+E9C,EApEuC,SAAC,GAAwB,IAAD,EAArBC,EAAqB,EAArBA,KAElCC,GAFuD,EAAfC,SAC5B,UAAAF,EAAKG,KAAKC,oBAAV,SAAwBC,MAC5BL,EAAKM,kBAAkBC,OAarC,OAXoB,GAAhBN,EAAMO,SACP,IACE,KAUH,gCACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKH,MAAM,mBACX,gBAAC,EAAD,MACA,gBAACT,EAAD,KACGK,EAAMQ,KACL,SAACC,GAeC,IAAML,EAAQK,EAAKC,YAAYN,OAASK,EAAKE,OAAOC,KACpD,OACE,sBAAIC,IAAKJ,EAAKE,OAAOC,MACnB,gBAAChB,EAAD,CAAUkB,WAAS,EAACC,SAAS,6BAC3B,8BACE,0BACE,gBAAC,EAAAC,KAAD,CAAMC,GAAIR,EAAKE,OAAOC,KAAMM,SAAS,OACnC,wBAAMA,SAAS,YAAYd,KAG/B,gBAAC,IAAD,KAAUK,EAAKC,YAAYS,OAE7B,+BACE,gBAAC,IAAD,CACEC,wBAAyB,CACvBC,OAAQZ,EAAKC,YAAYY,aAAeb,EAAKc,SAE/CL,SAAS","file":"component---src-pages-index-tsx-f4762049875184a57c02.js","sourcesContent":["import * as React from \"react\";\nimport styled from \"styled-components\";\nimport Body1 from \"./body1\";\n\nconst Container = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  background: linear-gradient(\n    ${(props) => props.theme.palette.primary},\n    ${(props) => props.theme.palette.secondary}\n  );\n  border-radius: 4px;\n  min-height: 168px;\n`;\n\nconst Content = styled.div`\n  max-width: 32em;\n  margin: 32px;\n  text-align: left;\n  color: ${(props) => props.theme.palette.gray300};\n`;\n\nconst Header = styled.div`\n  font-size: 25px;\n  font-weight: 400;\n  margin: 0;\n`;\n\nconst Subtitle = styled.div`\n  font-size: 16px;\n  font-weight: 400;\n  margin-top: 0.5rem;\n`;\n\nconst Banner: React.FC = () => (\n  <Container>\n    <Content>\n      <Header>Welcome to Vector Academy</Header>\n      <Subtitle>\n        Your end-to-end learning hub for all things Crypto and DeFi\n      </Subtitle>\n    </Content>\n  </Container>\n);\n\nexport default Banner;\n","import * as React from \"react\";\nimport { PageProps, Link, graphql } from \"gatsby\";\nimport styled from \"styled-components\";\n\nimport Layout from \"../components/layout\";\nimport Banner from \"../components/banner\";\nimport Caption from \"../components/caption\";\nimport Body1 from \"../components/body1\";\nimport Seo from \"../components/seo\";\n\nconst PostList = styled.ul`\n  width: 100%;\n  list-style: none;\n  margin-top: 40px;\n  margin-bottom: 40px;\n`;\n\nconst PostItem = styled.article`\n  border-radius: 4px;\n  margin-bottom: 40px;\n  padding: 24px;\n  background: ${(props) => props.theme.global.surface};\n\n  p {\n    margin-bottom: 0;\n  }\n\n  header {\n    margin-bottom: 4px;\n  }\n`;\n\nconst IndexPage: React.FC<PageProps> = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`;\n  const posts = data.allMarkdownRemark.nodes;\n\n  if (posts.length == 0) {\n    <Layout>\n      <Seo title=\"Vector Academy\" />\n      <p>\n        No blog posts found. Add markdown posts to \"content/blog\" (or the\n        directory you specified for the \"gatsby-source-filesystem\" plugin in\n        gatsby-config.js).\n      </p>\n    </Layout>;\n  }\n\n  return (\n    <>\n      <Layout>\n        <Seo title=\"Vector Academy\" />\n        <Banner />\n        <PostList>\n          {posts.map(\n            (post: {\n              frontmatter: {\n                title: any;\n                date:\n                  | boolean\n                  | React.ReactChild\n                  | React.ReactFragment\n                  | React.ReactPortal\n                  | null\n                  | undefined;\n                description: any;\n              };\n              fields: { slug: React.Key | null | undefined };\n              excerpt: any;\n            }) => {\n              const title = post.frontmatter.title || post.fields.slug;\n              return (\n                <li key={post.fields.slug}>\n                  <PostItem itemScope itemType=\"http://schema.org/Article\">\n                    <header>\n                      <h4>\n                        <Link to={post.fields.slug} itemProp=\"url\">\n                          <span itemProp=\"headline\">{title}</span>\n                        </Link>\n                      </h4>\n                      <Caption>{post.frontmatter.date}</Caption>\n                    </header>\n                    <section>\n                      <Body1\n                        dangerouslySetInnerHTML={{\n                          __html: post.frontmatter.description || post.excerpt,\n                        }}\n                        itemProp=\"description\"\n                      />\n                    </section>\n                  </PostItem>\n                </li>\n              );\n            }\n          )}\n        </PostList>\n      </Layout>\n    </>\n  );\n};\n\nexport default IndexPage;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}